#ifndef UE4SS_SDK_BP_CameraThirdPerson_HPP
#define UE4SS_SDK_BP_CameraThirdPerson_HPP

class ABP_CameraThirdPerson_C : public ACameraThirdPerson
{
    class UProximityProbeComponent* CameraProximityProbe;
    class UProximityProbeComponent* RayCastTargetProximityProbe;
    class USphereComponent* Collision;
    class USphereComponent* Sphere;
    class USkeletalMeshComponent* SkeletalMesh;
    float Timeline_JumpDown_Reset_Reset_8C0FE1574E79F4C65223998512C78362;
    TEnumAsByte<ETimelineDirection::Type> Timeline_JumpDown_Reset__Direction_8C0FE1574E79F4C65223998512C78362;
    class UTimelineComponent* Timeline JumpDown Reset;
    float Timeline_JumpDown_LookDown_F4F08AEB4DCEE0F0C488E3B0B185899C;
    TEnumAsByte<ETimelineDirection::Type> Timeline_JumpDown__Direction_F4F08AEB4DCEE0F0C488E3B0B185899C;
    class UTimelineComponent* Timeline JumpDown;
    bool AutoCam On/Off;
    class UCurveFloat* AutoYawPitch;
    bool Input Cam >0;
    float WallOffset;
    float MaxWallOffset;
    float SpeedOffsetLength;
    float SmoothAttachZ;
    FVector2D SmoothAttachXY;
    float Jump Target Z;
    FVector CameraTargetUnmodified;
    FVector TargetModifier Location;
    float TargetModifier Alpha;
    FVector SpeedOffsetDirection;
    FVector WallOffsetDirection;
    float Yaw Increment;
    float Pitch Increment;
    float AutoCam Blend Yaw;
    float AutoCam Blend Pitch;
    float JumpSwitchSmoother;
    FVector FinalAttachSmooth;
    FVector AttachLocationOffset;
    float Cat Acceleration Speed +1;
    float Cat acceleration;
    float HangingPerched Smooth;
    float Fov Modifier;
    float CameraShake Intensity;
    float AutoCam Yaw Final Increment;
    float AutoCam Pitch Final Increment;
    float AutoCam Delta Cat-Cam Yaw;
    float AutoCam Delta Cat-Cam Pitch Smooth;
    float AutoCam Base Speed;
    float AutoCam Delay Before Enable;
    float AutoCam Delay Counter;
    float AutoCam Yaw Increment Smooth;
    float AutoCam Pitch Increment Smooth;
    FVector Ideal Location Before Jump;
    FVector Final Jump Location;
    float AutoCam Pitch Jump Down Blend;
    float AutoCam Pitch Jump Down Increment;
    float AutoCam Pitch Jump Down;
    float AutoCam Pitch Jump Down Blend Saved;
    float WallOffset Collision Time Right;
    float WallOffset Collision Time Left;
    bool WallOffset Collision Unfiltered;
    float WallOffset Collision Time Total;
    float WallOffset Collision Time Final;
    FFloatSpringState NewVar_0;
    float WallOffset Collision Smoother;
    float WallOffset Collision Time Total+1;
    class AActor* GameplaySwitcher;
    UClass* GameplaySwitcherClass;
    float Focal Distance;
    TArray<class AActor*> Temp_object_Variable;
    FBP_CameraThirdPerson_CK2Node_CreateDelegate_OutputDelegate K2Node_CreateDelegate_OutputDelegate;
    void TimerDynamicDelegate();
    FBP_CameraThirdPerson_CK2Node_CreateDelegate_OutputDelegate_1 K2Node_CreateDelegate_OutputDelegate_1;
    void InterpolatorCompleteOutputPin();
    float K2Node_CustomEvent_Ratio;
    FBP_CameraThirdPerson_CK2Node_CreateDelegate_OutputDelegate_2 K2Node_CreateDelegate_OutputDelegate_2;
    void InterpolatorTickOutputPin(float bpp__Ratio__pf);
    float Temp_float_Variable;
    TArray<class AActor*> Temp_object_Variable_1;
    FBP_CameraThirdPerson_CK2Node_CreateDelegate_OutputDelegate_3 K2Node_CreateDelegate_OutputDelegate_3;
    void CatDelegate(class ACatPawn* bpp___catPawn__pf);
    FNoiseSmootherFloat K2Node_MakeStruct_NoiseSmootherFloat;
    FBP_CameraThirdPerson_CK2Node_CreateDelegate_OutputDelegate_4 K2Node_CreateDelegate_OutputDelegate_4;
    void CatDelegate(class ACatPawn* bpp___catPawn__pf);
    class UABP_Cat_New_C* K2Node_DynamicCast_AsABP_Cat_New;
    bool K2Node_DynamicCast_bSuccess;
    FJumpBlock CallFunc_GetCurrentJumpBlock_ReturnValue;
    FJumpData CallFunc_GetCurrentJumpData_ReturnValue;
    class UJoyEasingInterpolator* CallFunc_StartCurveInterpolator__interpolatorObject;
    class UJoyCurveInterpolator* CallFunc_StartCurveInterpolator_ReturnValue;
    bool CallFunc_IsValid_ReturnValue_1;
    float CallFunc_BreakVector_X;
    float CallFunc_BreakVector_Y;
    float CallFunc_BreakVector_Z;
    float CallFunc_BreakVector_X_1;
    float CallFunc_BreakVector_Y_1;
    float CallFunc_BreakVector_Z_1;
    FJumpData CallFunc_GetCurrentJumpData_ReturnValue_1;
    float CallFunc_BreakVector_X_2;
    float CallFunc_BreakVector_Y_2;
    float CallFunc_BreakVector_Z_2;
    float CallFunc_BreakVector_X_3;
    float CallFunc_BreakVector_Y_3;
    float CallFunc_BreakVector_Z_3;
    float CallFunc_BreakRotator_Roll;
    float CallFunc_BreakRotator_Pitch;
    float CallFunc_BreakRotator_Yaw;
    class ACatPawn* K2Node_CustomEvent__catPawn_1;
    class ACatPawn* K2Node_CustomEvent__catPawn;
    FHitResult CallFunc_LineTraceSingle_OutHit;
    float K2Node_Event__blendTime_1;
    float K2Node_Event__blendTime;
    bool Temp_bool_Variable;
    float CallFunc_BreakVector_X_4;
    float CallFunc_BreakVector_Y_4;
    float CallFunc_BreakVector_Z_4;
    class ACatPawn* K2Node_Event__cat;
    float CallFunc_BreakVector_X_5;
    float CallFunc_BreakVector_Y_5;
    float CallFunc_BreakVector_Z_5;
    float K2Node_Event_DeltaSeconds;
    bool Temp_bool_Has_Been_Initd_Variable;
    bool Temp_bool_IsClosed_Variable;
    class UJoyEasingInterpolator* Temp_wildcard_Variable;
    float Temp_float_Variable_1;
    class AHKPlayerCameraManager* CallFunc_FindCameraManager_CameraManager;
    TArray<class AActor*> CallFunc_GetCameraStack_ReturnValue;
    class AActor* CallFunc_Array_Get_Item;
    float CallFunc_BreakVector_X_6;
    float CallFunc_BreakVector_Y_6;
    float CallFunc_BreakVector_Z_6;
    float CallFunc_BreakVector_X_7;
    float CallFunc_BreakVector_Y_7;
    float CallFunc_BreakVector_Z_7;
    TEnumAsByte<EEndPlayReason::Type> K2Node_Event_EndPlayReason;
    FTransform CallFunc_GetTransform_ReturnValue;
    FHitResult CallFunc_LineTraceSingle_OutHit_1;
    FPostProcessSettings K2Node_MakeStruct_PostProcessSettings;
    bool CallFunc_BreakHitResult_bBlockingHit;
    bool CallFunc_BreakHitResult_bInitialOverlap;
    float CallFunc_BreakHitResult_Time;
    float CallFunc_BreakHitResult_Distance;
    FVector CallFunc_BreakHitResult_Location;
    FVector CallFunc_BreakHitResult_ImpactPoint;
    FVector CallFunc_BreakHitResult_Normal;
    FVector CallFunc_BreakHitResult_ImpactNormal;
    class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat;
    class AActor* CallFunc_BreakHitResult_HitActor;
    class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent;
    FName CallFunc_BreakHitResult_HitBoneName;
    int32 CallFunc_BreakHitResult_HitItem;
    int32 CallFunc_BreakHitResult_ElementIndex;
    int32 CallFunc_BreakHitResult_FaceIndex;
    FVector CallFunc_BreakHitResult_TraceStart;
    FVector CallFunc_BreakHitResult_TraceEnd;
    FPostProcessSettings K2Node_MakeStruct_PostProcessSettings_1;

    void WallSideOffset(float bpp__dt__pf);
    void Timeline JumpDown Reset__UpdateFunc();
    void Timeline JumpDown Reset__FinishedFunc();
    void Timeline JumpDown__UpdateFunc();
    void Timeline JumpDown__FinishedFunc();
    void Tick_578069E64FB8DCA8E1905FB788988194(float bpp__Ratio__pf);
    void Start Jump(class ACatPawn* bpp___catPawn__pf);
    void ReceiveTick(float bpp__DeltaSeconds__pf);
    void ReceiveEndPlay(TEnumAsByte<EEndPlayReason::Type> bpp__EndPlayReason__pf);
    void ReceiveBeginPlay();
    void ProjectWorldToScreenNormalized(const FVector& bpp__WorldPosition__pf__const, FVector2D& bpp__NormalizedScreenLocation__pf);
    void OnCatSet(class ACatPawn* bpp___cat__pf);
    void Jump Location();
    void Jump Down(class ACatPawn* bpp___catPawn__pf);
    void ExecuteUbergraph_BP_CameraThirdPerson_4(int32 bpp__EntryPoint__pf);
    void ExecuteUbergraph_BP_CameraThirdPerson_2(int32 bpp__EntryPoint__pf);
    void ExecuteUbergraph_BP_CameraThirdPerson_0(int32 bpp__EntryPoint__pf);
    void Event On Blend End();
    void DynamicFOV();
    void Complete_578069E64FB8DCA8E1905FB788988194();
    void AutoCam();
    void InterpolatorTickOutputPin__DelegateSignature(float bpp__Ratio__pf);
    void InterpolatorCompleteOutputPin__DelegateSignature();
    void CatDelegate__DelegateSignature(class ACatPawn* bpp___catPawn__pf);
};

#endif
