#ifndef UE4SS_SDK_UMG_Drone_Menu_New_HPP
#define UE4SS_SDK_UMG_Drone_Menu_New_HPP

class UUMG_Drone_Menu_New_C : public UDroneMenuWidget
{
    FPointerToUberGraphFrame UberGraphFrame;
    class UWidgetAnimation* Open;
    class UWidgetAnimation* MemoryDarkOverlayFadeIn;
    class UImage* Background;
    class UImage* foreground;
    class UImage* Image_86;
    class UUMG_Drone_HorizontalInventory_New_C* inventory_display;
    class UCanvasPanel* inventory_panel;
    class UCanvasPanel* inventory_tab_active;
    class UTextBlock* inventory_tab_active_text;
    class UCanvasPanel* inventory_tab_inactive;
    class UTextBlock* inventory_tab_inactive_text;
    class UTextBlock* ItemName;
    class UCanvasPanel* memories_panel;
    class UCanvasPanel* memories_tab_active;
    class UTextBlock* memories_tab_active_text;
    class UCanvasPanel* memories_tab_inactive;
    class UTextBlock* memories_tab_inactive_text;
    class UUMG_Memories_Widget_C* memories_widget;
    class UImage* memory_dark_overlay;
    class UImage* memory_image;
    class UImage* memory_object_viewer;
    class UTextBlock* memory_subtext;
    class UCanvasPanel* memory_text_container;
    class UTextBlock* memory_text_content;
    class URichTextBlock* memory_text_content_rich;
    class UImage* progress_icon;
    class UTextBlock* progress_text;
    class UBorder* Root;
    class UImage* ZoomDisplay;
    TArray<class UUMG_Drone_GridButton_C*> Slots;
    TEnumAsByte<EDroneMenuCategory> Category;
    class ABP_ItemRenderer_C* ItemRenderer;
    class UMaterialInstanceDynamic* FullPhotoMaterialInstance;
    class UMaterialInstanceDynamic* GlitchedMemoryMaterialInstance;
    class ULootableComponent* HighlightedItem;
    class ABP_HKHUD_C* HUD;
    TEnumAsByte<E_DroneMenuActionDisplayState> CurrentActionDisplayState;
    class ULootableComponent* CurrentActionDisplaySelectedItem;
    float RenderScale;
    float VerticalRenderLocation;
    bool HasSelectedMemory;
    float MemoryTextOffset;
    float MemoryTextScrollSpeed;
    float MemoryTextScrollInput;
    float MemoryTextBaseY;
    FName CurrentActionDisplaySelectedMemory;
    bool CurrentShowItemEnabled;
    TArray<class UUMG_Drone_MainMemoryButton_C*> main_memories_buttons;
    TArray<class UUMG_Drone_SideMemoryButton_C*> side_memories_buttons;
    int32 MainMemoryIndex;
    int32 SideMemoryIndex;
    int32 SideMemoriesWidth;
    TEnumAsByte<E_MemorySelectionState> MemorySelectionState;
    bool CurrentDisplayReadMemory;
    bool DisplayExamine;

    void OnRightVerticalAxis(float _value, bool& _handled);
    void OnRightHorizontalAxis(float _value, bool& _handled);
    void OnLeftVerticalAxis(float _value, bool& _handled);
    void OnLeftHorizontalAxis(float _value, bool& _handled);
    void OnXPressed(bool& _handled);
    void UpdateActionDisplays();
    void OnRightTriggerAxis(float _value, bool& _handled);
    void OnLeftTriggerAxis(float _value, bool& _handled);
    void UpdateMemoryDisplay(bool Revealed, bool Unlocked, FB12MemoryData Data);
    void GetSelectedMemory(FB12MemoryData& MemoryData, bool& IsValid);
    TEnumAsByte<EDroneMenuCategory> GetCategory();
    void GetPreviousCategory(TEnumAsByte<EDroneMenuCategory> Category, TEnumAsByte<EDroneMenuCategory>& PreviousCategory);
    void GetNextCategory(TEnumAsByte<EDroneMenuCategory> Category, TEnumAsByte<EDroneMenuCategory>& NextCategory);
    void GetSelectedItem(class ULootableComponent*& Lootable);
    void OnValidatePressed(bool& _handled);
    void OnLBPressed(bool& _handled);
    void OnRBPressed(bool& _handled);
    void CategoryToText(TEnumAsByte<EDroneMenuCategory> Category, FText& Text);
    void UpdateVisual();
    void OnDownPressed(bool& _handled);
    void OnLeftPressed(bool& _handled);
    void OnRightPressed(bool& _handled);
    void OnUpPressed(bool& _handled);
    void OnCancelPressed(bool& _handled);
    void OnDisplayed();
    void OnReset();
    void OnItemBeginHighlight(class ULootableComponent* Lootable);
    void OnItemEndHighlight(class ULootableComponent* Lootable);
    void OnBackpackInventoryChange(class ABackpack* _backpack, class ULootableComponent* _loot);
    void Tick(FGeometry MyGeometry, float InDeltaTime);
    void SetCategory(TEnumAsByte<EDroneMenuCategory> _category);
    void OnInitialized();
    void OnIventoryItemGridSelectionChanged(int32 PreviousSelection, int32 NewSelection);
    void PreConstruct(bool IsDesignTime);
    void SetMemorySelectionState(TEnumAsByte<E_MemorySelectionState> MemorySelectionState);
    void ExecuteUbergraph_UMG_Drone_Menu_New(int32 EntryPoint);
};

#endif
