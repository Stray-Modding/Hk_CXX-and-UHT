#ifndef UE4SS_SDK_BP_Drone_HPP
#define UE4SS_SDK_BP_Drone_HPP

class ABP_Drone_C : public ADrone
{
    class UAudioComponent* PS5Vibration;
    class UWidgetComponent* BatteryGaugeGUI;
    class UAudioComponent* antizurgLight_refilling_disabled_loop_01;
    class UAudioComponent* antizurgLight_refilling_loop_01;
    class UAudioComponent* drone_popped_loop_02;
    class UAntiZurgSpotlightComponent* StrongLight;
    class UPointLightComponent* BounceLight;
    class UStaticMeshComponent* Cone;
    class USpotLightComponent* BackBurnerLight;
    class UPointLightComponent* PointLight;
    float Scale_loot_scale_339E284D4028AEEE8E313AB32454A427;
    float Scale_loot_opacity_339E284D4028AEEE8E313AB32454A427;
    TEnumAsByte<ETimelineDirection::Type> Scale_loot__Direction_339E284D4028AEEE8E313AB32454A427;
    class UTimelineComponent* Scale_loot;
    float Timeline_go_in_move_z_F95EF5E04EBE4F47FF37E6AED889044D;
    float Timeline_go_in_scale_F95EF5E04EBE4F47FF37E6AED889044D;
    TEnumAsByte<ETimelineDirection::Type> Timeline_go_in__Direction_F95EF5E04EBE4F47FF37E6AED889044D;
    class UTimelineComponent* Timeline_go_in;
    float Timeline_go_out_MovementRatio_41A3FD89461A0DE2FC2CA2AFD141FAA5;
    float Timeline_go_out_scale_41A3FD89461A0DE2FC2CA2AFD141FAA5;
    float Timeline_go_out_move_z_41A3FD89461A0DE2FC2CA2AFD141FAA5;
    TEnumAsByte<ETimelineDirection::Type> Timeline_go_out__Direction_41A3FD89461A0DE2FC2CA2AFD141FAA5;
    class UTimelineComponent* Timeline_go_out;
    bool Collision Left;
    bool Collision Right;
    float LeftRight Location;
    FVector UnfoldInitialStartPosition;
    FRotator UnfoldInitialStartRotation;
    FVector FoldInitialStartPosition;
    FRotator FoldInitialStartRotation;
    class UABP_Drone_C* AnimationBP;
    float Delta Seconds;
    class UMaterialInstanceDynamic* Loot_Dynamic_Mat;
    FVectorSpringState CatFollowSpringState;
    FRotator SmoothYaw;
    float BankingRoll;
    float StrongLightIntensity;
    class UUserWidget* BatteryGaugeWidget;
    float Battery;
    float BatteryRechargeSpeed;
    float BatteryDechargeSpeed;
    float BatteryStartToRamble;
    class UMaterialInstanceDynamic* Heat Material;
    class UMaterialInstanceDynamic* Drone Material;
    bool BatteryDepleted;
    class AActor* anti zurg sfx;
    bool StrongLightActive;
    class UForceFeedbackComponent* StrongLightForceFeedback;
    bool BatteryRambling;
    bool WeakLightActive;
    float StrongLight InnerConeBase;
    float StrongLight OuterConeBase;
    float WeakLightIntensity;
    FVector lastRotation;
    float droneReactorSfxPower;
    class UDroneSettings* DroneSettings;
    float StrongLightReactivationPercentage;
    float StrongLightOutterConeAngle;
    float StrongLightInnerConeAngle;
    float RandomLightIntensityMultiplier;
    float Strong Light Active Smooth;
    bool isTorchlightEnabled;
    float WeakLightIntensityRandom;
    bool RechargeAllowed;
    FSmootherVector DriftingVelocitySmoother;
    FSmootherRotation DriftingAngularVelocitySmoother;
    class AActor* UnfoldedSocket;
    float PreviousFoldMoveZ;
    float CurrentMoveToSpeed;
    class AActor* LightSocket;
    FVector LightSocketInitialPosition;
    class UMaterialInstanceDynamic* DynaMat DroneEyes;
    float JaugeVisibilityTimer;
    float JaugeVisibilityDuration;
    float HeatIncreaseSpeed;
    bool DroneIsOverHeating;
    float OverHeatDicreaseSpeed;
    float TimeBeforeNormalHeatDicrease;
    int32 BounceLightTraceIndex;
    TArray<float> BounceLightTraceDistances;
    float BounceLightTraceAverageDistances;
    bool Temp_bool_Has_Been_Initd_Variable;
    float K2Node_CustomEvent_DeltaTime_1;
    class AAudioManager* CallFunc_GetAudioManager_AudioManager;
    class AActor* CallFunc_initLoopSequence_Sequence;
    bool Temp_bool_IsClosed_Variable;
    class USoundBase* K2Node_CustomEvent_NewSound;
    bool Temp_bool_IsClosed_Variable_1;
    float K2Node_Event_DeltaSeconds;
    FName CallFunc_GetFoldedSocket__socketName;
    FName CallFunc_GetFoldedSocket__socketName_1;
    class ULootableComponent* K2Node_CustomEvent_LootableComponent;
    class ULootableComponent* K2Node_CustomEvent_Lootable;
    TArray<TEnumAsByte<EObjectTypeQuery>> K2Node_MakeArray_Array;
    float K2Node_CustomEvent_DeltaTime;
    float CallFunc_BreakRotator_Roll;
    float CallFunc_BreakRotator_Pitch;
    float CallFunc_BreakRotator_Yaw;
    FHitResult CallFunc_K2_SetRelativeRotation_SweepHitResult;
    class UABP_Drone_C* K2Node_DynamicCast_AsABP_Drone;
    bool K2Node_DynamicCast_bSuccess;
    bool Temp_bool_Has_Been_Initd_Variable_1;
    class UUserWidget* K2Node_DynamicCast_AsCACA_Drone_Jauge;
    bool K2Node_DynamicCast_bSuccess_1;
    bool Temp_bool_IsClosed_Variable_2;
    bool Temp_bool_Has_Been_Initd_Variable_2;
    bool Temp_bool_IsClosed_Variable_3;
    FHitResult CallFunc_K2_SetActorLocation_SweepHitResult;
    bool Temp_bool_IsClosed_Variable_4;
    bool Temp_bool_Has_Been_Initd_Variable_3;
    FBP_Drone_CK2Node_CreateDelegate_OutputDelegate K2Node_CreateDelegate_OutputDelegate;
    void DroneActionDelegate(class ADrone* bpp__Drone__pf);
    FBP_Drone_CK2Node_CreateDelegate_OutputDelegate_1 K2Node_CreateDelegate_OutputDelegate_1;
    void TalkableLineDelegate(class UTalkableComponent* bpp___talkableComponent__pf, const FDialogLine& bpp___line__pf);
    FBP_Drone_CK2Node_CreateDelegate_OutputDelegate_2 K2Node_CreateDelegate_OutputDelegate_2;
    void TalkableLineDelegate(class UTalkableComponent* bpp___talkableComponent__pf, const FDialogLine& bpp___line__pf);
    float CallFunc_BreakRotator_Roll_1;
    float CallFunc_BreakRotator_Pitch_1;
    float CallFunc_BreakRotator_Yaw_1;
    bool Temp_bool_Has_Been_Initd_Variable_4;
    FDroneSpringParams K2Node_MakeStruct_DroneSpringParams;
    FHitResult CallFunc_K2_SetActorRelativeRotation_SweepHitResult;
    FDroneSpringParams K2Node_MakeStruct_DroneSpringParams_1;
    FHitResult CallFunc_K2_SetActorRelativeRotation_SweepHitResult_1;
    FBP_Drone_CK2Node_CreateDelegate_OutputDelegate_3 K2Node_CreateDelegate_OutputDelegate_3;
    void DroneActionDelegate(class ADrone* bpp__Drone__pf);
    FHitResult CallFunc_K2_SetActorRelativeLocation_SweepHitResult;
    bool Temp_bool_IsClosed_Variable_5;
    FBP_Drone_CK2Node_CreateDelegate_OutputDelegate_4 K2Node_CreateDelegate_OutputDelegate_4;
    void DroneActionDelegate(class ADrone* bpp__Drone__pf);
    bool Temp_bool_Has_Been_Initd_Variable_5;
    bool Temp_bool_IsClosed_Variable_6;
    float K2Node_Event__dt_2;
    FTransform K2Node_Event__target_1;
    FDroneMoveToParams K2Node_Event__params_1;
    float K2Node_Event__movementRatio_1;
    FVector CallFunc_BreakTransform_Location;
    FRotator CallFunc_BreakTransform_Rotation;
    FVector CallFunc_BreakTransform_Scale;
    FHitResult CallFunc_K2_SetActorLocation_SweepHitResult_1;
    float K2Node_Event__dt_1;
    FTransform K2Node_Event__target;
    FDroneSpringParams K2Node_Event__params;
    float K2Node_Event__movementRatio;
    FVector CallFunc_BreakTransform_Location_1;
    FRotator CallFunc_BreakTransform_Rotation_1;
    FVector CallFunc_BreakTransform_Scale_1;
    FHitResult CallFunc_K2_SetActorLocation_SweepHitResult_2;
    class ADrone* K2Node_CustomEvent_Drone_2;
    class ADrone* K2Node_CustomEvent_Drone_1;
    FTransform CallFunc_GetTransform_ReturnValue;
    FTransform CallFunc_GetTransform_ReturnValue_1;
    float CallFunc_BreakRotator_Roll_2;
    float CallFunc_BreakRotator_Pitch_2;
    float CallFunc_BreakRotator_Yaw_2;
    float CallFunc_BreakRotator_Roll_3;
    float CallFunc_BreakRotator_Pitch_3;
    float CallFunc_BreakRotator_Yaw_3;
    FTransform CallFunc_GetTransform_ReturnValue_2;
    FVector CallFunc_BreakTransform_Location_2;
    FRotator CallFunc_BreakTransform_Rotation_2;
    FVector CallFunc_BreakTransform_Scale_2;
    FVector CallFunc_BreakTransform_Location_3;
    FRotator CallFunc_BreakTransform_Rotation_3;
    FVector CallFunc_BreakTransform_Scale_3;
    float CallFunc_BreakVector_X;
    float CallFunc_BreakVector_Y;
    float CallFunc_BreakVector_Z;
    float CallFunc_BreakVector_X_1;
    float CallFunc_BreakVector_Y_1;
    float CallFunc_BreakVector_Z_1;
    FHitResult CallFunc_K2_AddActorWorldOffset_SweepHitResult;
    float K2Node_CustomEvent_dt;
    FHitResult CallFunc_K2_AddActorWorldOffset_SweepHitResult_1;
    FHitResult CallFunc_K2_AddActorWorldRotation_SweepHitResult;
    FHitResult CallFunc_K2_SetRelativeRotation_SweepHitResult_1;
    TArray<class AActor*> Temp_object_Variable;
    FHitResult CallFunc_SphereTraceSingleForObjects_OutHit;
    bool Temp_bool_Has_Been_Initd_Variable_6;
    FHitResult CallFunc_K2_SetActorRelativeLocation_SweepHitResult_1;
    FHitResult CallFunc_K2_SetActorRelativeLocation_SweepHitResult_2;
    TArray<class AActor*> Temp_object_Variable_1;
    FHitResult CallFunc_SphereTraceSingleForObjects_OutHit_1;
    class UParticleSystemComponent* CallFunc_SpawnEmitterAttached_ReturnValue;
    class UTalkableComponent* K2Node_CustomEvent__talkableComponent_1;
    FDialogLine K2Node_CustomEvent__line_1;
    class UTalkableComponent* K2Node_CustomEvent__talkableComponent;
    FDialogLine K2Node_CustomEvent__line;
    FName K2Node_CustomEvent_MemoryId;
    class ADrone* K2Node_CustomEvent_Drone;
    class UBackpackUserWidget* K2Node_DynamicCast_AsUMG_Drone_Memories_Popup_New;
    bool K2Node_DynamicCast_bSuccess_2;
    FName CallFunc_GetFoldedSocket__socketName_2;
    float K2Node_Event__dt;
    FName CallFunc_GetFoldedSocket__socketName_3;
    FVector CallFunc_BreakTransform_Location_4;
    FRotator CallFunc_BreakTransform_Rotation_4;
    FVector CallFunc_BreakTransform_Scale_4;
    class AHKPlayerController* CallFunc_FindHKPlayerController_HKPlayerController;
    FHitResult CallFunc_K2_SetActorLocationAndRotation_SweepHitResult;
    class AHKPlayerController* CallFunc_FindHKPlayerController_HKPlayerController_1;
    class AHKPlayerController* CallFunc_FindHKPlayerController_HKPlayerController_2;
    class AHKPlayerController* CallFunc_FindHKPlayerController_HKPlayerController_3;
    class AHKPlayerController* CallFunc_FindHKPlayerController_HKPlayerController_4;
    class AHKPlayerController* CallFunc_FindHKPlayerController_HKPlayerController_5;

    void UserConstructionScript();
    void Update Drift(float bpp__dt__pf);
    void UpdateWeakLight();
    void UpdateStrongLight();
    void UpdateSettings();
    void UpdatePitchAndRoll(float bpp__DeltaTime__pf);
    void UpdateLightSocket();
    void UpdateFX();
    void UpdateCollisionCheck();
    void Timeline_go_out__UpdateFunc();
    void Timeline_go_out__Start_anim_unfold__EventFunc();
    void Timeline_go_out__FinishedFunc();
    void Timeline_go_in__UpdateFunc();
    void Timeline_go_in__FinishedFunc();
    void Timeline_go_in__Event Fold__EventFunc();
    void TickSpring(float bpp___dt__pf, const FTransform& bpp___target__pf__const, const FDroneSpringParams& bpp___params__pf__const, float bpp___movementRatio__pf);
    void TickSound(float bpp__DeltaTime__pf);
    void TickMoveTo(float bpp___dt__pf, const FTransform& bpp___target__pf__const, const FDroneMoveToParams& bpp___params__pf__const, float bpp___movementRatio__pf);
    void Start Loot Animation(class ULootableComponent* bpp__LootableComponent__pf);
    void sfx_set_popped_loop(class USoundBase* bpp__NewSound__pf);
    void Scale_loot__UpdateFunc();
    void Scale_loot__set mat__EventFunc();
    void Scale_loot__FinishedFunc();
    void Say Phrase(FString bpp__Phrase__pf__const);
    void ResetLootAnimation(class ULootableComponent* bpp__Lootable__pf);
    void ReceiveTick(float bpp__DeltaSeconds__pf);
    void ReceiveBeginPlay();
    void PlayUnlockedMemorySequence(FName bpp__memoryId__pf);
    void OnWeakLightUnrequested();
    void OnWeakLightRequested();
    void OnWeakLightInactive();
    void OnWeakLightActive();
    void OnUnequipped(class ADrone* bpp__Drone__pf);
    void OnTeleported();
    void OnStrongLightUnrequested();
    void OnStrongLightRequested();
    void OnStrongLightRambleStop();
    void OnStrongLightRambleStart();
    void OnStrongLightInactive();
    void OnStrongLightBatteryFull();
    void OnStrongLightBatteryDepleted();
    void OnStrongLightActive();
    void OnStopUnfold();
    void OnStopFold();
    void OnMovementTargetChanged();
    void OnGUIOpened(class ADrone* bpp__Drone__pf);
    void OnForceUnfold();
    void OnFoldedTick(float bpp___dt__pf);
    void OnFoldedExit();
    void OnFoldedEnter();
    void OnEquipped(class ADrone* bpp__Drone__pf);
    void OnDialogLineEnded(class UTalkableComponent* bpp___talkableComponent__pf, const FDialogLine& bpp___line__pf__const);
    void OnDialogLineBegan(class UTalkableComponent* bpp___talkableComponent__pf, const FDialogLine& bpp___line__pf__const);
    void IsWeakLightActive(bool& bpp__Active__pf);
    void IsStrongLightActive(bool& bpp__Active__pf);
    void HideGauge();
    void ExecuteUbergraph_BP_Drone_1(int32 bpp__EntryPoint__pf);
    void DroneOverHeating();
    void Drift();
    void BounceLightLocation();
    void BeginPlaySound();
    void TalkableLineDelegate__DelegateSignature(class UTalkableComponent* bpp___talkableComponent__pf, const FDialogLine& bpp___line__pf);
    void DroneActionDelegate__DelegateSignature(class ADrone* bpp__Drone__pf);
};

#endif
