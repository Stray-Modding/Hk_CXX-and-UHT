#ifndef UE4SS_SDK_BP_CatPawn_HPP
#define UE4SS_SDK_BP_CatPawn_HPP

class ABP_CatPawn_C : public ACatPawn
{
    class UForceFeedbackComponent* ForceFeedback;
    class UAudioComponent* PS5VibrationSound_ZurkSucking;
    class UAudioComponent* PS5Vibration_ZurkSucking;
    class UAudioComponent* PS5Vibration_ZurkGrab;
    class UAudioComponent* PS5Vibration_Jump;
    class UArrowComponent* OnDeathDroneSocket;
    class UWidgetComponent* Widget;
    class UAudioComponent* sfx zurg sucking;
    class USceneComponent* GrabSocket;
    class UDrawMovementComponent* DrawMovement3;
    class UDrawMovementComponent* DrawMovement2;
    class UDrawMovementComponent* DrawMovement1;
    class UAudioComponent* cat_drift_loop_01;
    class UCapsuleComponent* Capsule1;
    class USceneCaptureComponent2D* SceneCaptureComponent2D;
    class UGFurComponent* GFur;
    class UArrowComponent* Arrow5;
    class UArrowComponent* Arrow;
    class UArrowComponent* Arrow3;
    class UArrowComponent* Arrow2;
    class UArrowComponent* Arrow1;
    class USpringArmComponent* SpringArm1;
    class UPointLightComponent* LightRig4;
    class UPointLightComponent* LightRig3;
    class UPointLightComponent* LightRig2;
    class USphereComponent* Sphere_drone_view_target;
    class USphereComponent* Sphere_drone;
    class UCapsuleComponent* BackLegPhysicCollider;
    class UCapsuleComponent* FrontLegPhysicCollider;
    bool Pilot On/Off;
    FVector Pad Input Unfiltered;
    float MeowRange;
    bool DisplayMeow;
    FVector Pad Input Direction Smooth;
    FVector Pad Input Speed Smooth;
    float BlendAfterJump;
    bool Meowing;
    class UABP_Cat_New_C* ABP;
    FVector PadInput for Test Jump Detect;
    float Time Blend Rotation After Jump;
    float All Collision Average Distance;
    float All Collision Average Distance Sum;
    class UCurveFloat* Cat_InputMeshAngleDelta_SpeedRatio;
    class UCurveFloat* SmoothedDirectionAgainstDirection_RotationRatioMultiplier;
    FSmootherVector InputPreSmoother;
    FSmootherFloat AngleSpeedRatioSmoother;
    FSmootherVector SmoothedDirection;
    bool IsCinematic;
    float Distance Ratio To Rail Edge for Slowdown;
    float Max Rail length for Slowdown;
    FVector JumpUpBeginLocation;
    FVector JumpUpEndLocation;
    FVector JumpDownBeginLocation;
    FVector JumpDownEndLocation;
    bool HasJumpUp;
    bool HasJumpDown;
    class UForceFeedbackComponent* ForceFeedback On Hit;
    float Life frame+1;
    class UPostProcessComponent* PostProcess On Hit;
    class UMaterialBillboardComponent* Smash A Billboard;
    float Pilot_addrotation;
    TArray<FVector> Pilot_DirectionsNoCol;
    float Pilot_DotTraceDirectionPadDirection;
    FVector Pilot_FinalDirection;
    float Pilot_DistancetoColRatio_pad;
    float Pilot_StartTrace;
    FVector Pilot_TraceDirection;
    float Pilot_MinDistanceRatio;
    float sound drift amount;
    FVector DialogLookAtTargetLocation;
    E_sfx_miaou lastRequestedMeow;
    TArray<FVector> Pilot_AllDirections;
    float Pilot SpeedMultiplier;
    bool Custom LookAt On/Off;
    FVector CinematicVelocityVector;
    float CinematicBlend;
    float Cinematic Blend To Gameplay TimeTo90Percent;
    bool HiddenInGameplay;
    float TurnHardness;
    FDebugFloatHistory DebugFloatGraph;
    bool RandomControls;
    bool OneJump Up and Down;
    bool RandomLookAtEnabled;
    bool DoRandomLookAt;
    FRotator RandomLookAtRotation;
    FName LookAtAvailableJumpsID;
    class USceneComponent* NewVar_0;
    bool OneJump Up;
    bool OneJump Down;
    bool OneJump Favor Down;
    float closestDangerDistance;
    bool IsZurgNearAndAwake;
    E_sfx_miaou current miaou;
    float miaouDensity;
    float lastMiaouRequestTimer;
    E_sfx_miaou lastMiaouRequest;
    class UCatUsableComponent* GrabbedObject;
    FBP_CatPawn_COnObjectGrabbed OnObjectGrabbed;
    void OnObjectGrabbed(class ABP_CatPawn_C* bpp__Cat__pf, class UCatUsableComponent* bpp__Grabbable__pf);
    FBP_CatPawn_COnObjectDropped OnObjectDropped;
    void OnObjectDropped(class ABP_CatPawn_C* bpp__Cat__pf, class UCatUsableComponent* bpp__Grabbable__pf);
    float miaou density;
    int32 number of zurgs attached;
    E_sfx_miaou zoned miaou;
    FVector LastFrameMovementInput;
    float DistanceToColl;
    bool CrawlHighTraceHit;
    bool CrawlLowTraceHit;
    bool CrawlBoxTraceHit;
    FHitResult PilotSphereHitResult;
    bool PilotLineHasHit;
    TArray<class ACatPawn*> OtherCats;
    FVector CatSize;
    bool OtherCatRegistered;
    FBP_CatPawn_COnZurkEnterGrabbed OnZurkEnterGrabbed;
    void OnZurkEnterGrabbed();
    FBP_CatPawn_COnZurkExitGrabbed OnZurkExitGrabbed;
    void OnZurkExitGrabbed();
    bool K2Node_CustomEvent_HasHit_5;
    FHitResult K2Node_CustomEvent_Hit_6;
    FBP_CatPawn_CK2Node_CreateDelegate_OutputDelegate K2Node_CreateDelegate_OutputDelegate;
    void JoyAsyncTraceSingleDone(bool bpp__HasHit__pf, FHitResult bpp__Hit__pf);
    FHitResult Temp_struct_Variable;
    bool Temp_bool_Variable;
    bool K2Node_CustomEvent_HasHit_4;
    FHitResult K2Node_CustomEvent_Hit_5;
    FBP_CatPawn_CK2Node_CreateDelegate_OutputDelegate_1 K2Node_CreateDelegate_OutputDelegate_1;
    void JoyAsyncTraceSingleDone(bool bpp__HasHit__pf, FHitResult bpp__Hit__pf);
    FHitResult Temp_struct_Variable_1;
    bool Temp_bool_Variable_1;
    bool K2Node_CustomEvent_HasHit_3;
    FHitResult K2Node_CustomEvent_Hit_4;
    FBP_CatPawn_CK2Node_CreateDelegate_OutputDelegate_2 K2Node_CreateDelegate_OutputDelegate_2;
    void JoyAsyncTraceSingleDone(bool bpp__HasHit__pf, FHitResult bpp__Hit__pf);
    FHitResult Temp_struct_Variable_2;
    bool Temp_bool_Variable_2;
    bool K2Node_CustomEvent_HasHit_2;
    FHitResult K2Node_CustomEvent_Hit_3;
    FBP_CatPawn_CK2Node_CreateDelegate_OutputDelegate_3 K2Node_CreateDelegate_OutputDelegate_3;
    void JoyAsyncTraceSingleDone(bool bpp__HasHit__pf, FHitResult bpp__Hit__pf);
    FHitResult Temp_struct_Variable_3;
    bool Temp_bool_Variable_3;
    bool K2Node_CustomEvent_HasHit_1;
    FHitResult K2Node_CustomEvent_Hit_2;
    FBP_CatPawn_CK2Node_CreateDelegate_OutputDelegate_4 K2Node_CreateDelegate_OutputDelegate_4;
    void JoyAsyncTraceSingleDone(bool bpp__HasHit__pf, FHitResult bpp__Hit__pf);
    FHitResult Temp_struct_Variable_4;
    bool Temp_bool_Variable_4;
    bool CallFunc_BreakHitResult_bBlockingHit;
    bool CallFunc_BreakHitResult_bInitialOverlap;
    float CallFunc_BreakHitResult_Time;
    float CallFunc_BreakHitResult_Distance;
    FVector CallFunc_BreakHitResult_Location;
    FVector CallFunc_BreakHitResult_ImpactPoint;
    FVector CallFunc_BreakHitResult_Normal;
    FVector CallFunc_BreakHitResult_ImpactNormal;
    class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat;
    class AActor* CallFunc_BreakHitResult_HitActor;
    class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent;
    FName CallFunc_BreakHitResult_HitBoneName;
    int32 CallFunc_BreakHitResult_HitItem;
    int32 CallFunc_BreakHitResult_ElementIndex;
    int32 CallFunc_BreakHitResult_FaceIndex;
    FVector CallFunc_BreakHitResult_TraceStart;
    FVector CallFunc_BreakHitResult_TraceEnd;
    FBP_CatPawn_CK2Node_CreateDelegate_OutputDelegate_5 K2Node_CreateDelegate_OutputDelegate_5;
    void JoyAsyncTraceSingleDone(bool bpp__HasHit__pf, FHitResult bpp__Hit__pf);
    bool K2Node_CustomEvent_HasHit;
    FHitResult K2Node_CustomEvent_Hit_1;
    FHitResult Temp_struct_Variable_5;
    bool CallFunc_BreakHitResult_bBlockingHit_1;
    bool CallFunc_BreakHitResult_bInitialOverlap_1;
    float CallFunc_BreakHitResult_Time_1;
    float CallFunc_BreakHitResult_Distance_1;
    FVector CallFunc_BreakHitResult_Location_1;
    FVector CallFunc_BreakHitResult_ImpactPoint_1;
    FVector CallFunc_BreakHitResult_Normal_1;
    FVector CallFunc_BreakHitResult_ImpactNormal_1;
    class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat_1;
    class AActor* CallFunc_BreakHitResult_HitActor_1;
    class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent_1;
    FName CallFunc_BreakHitResult_HitBoneName_1;
    int32 CallFunc_BreakHitResult_HitItem_1;
    int32 CallFunc_BreakHitResult_ElementIndex_1;
    int32 CallFunc_BreakHitResult_FaceIndex_1;
    FVector CallFunc_BreakHitResult_TraceStart_1;
    FVector CallFunc_BreakHitResult_TraceEnd_1;
    bool Temp_bool_Variable_5;
    float CallFunc_BreakRotator_Roll;
    float CallFunc_BreakRotator_Pitch;
    float CallFunc_BreakRotator_Yaw;
    bool Temp_bool_Variable_6;
    class USoundBase* Temp_object_Variable;
    bool Temp_bool_Variable_7;
    class USoundAttenuation* Temp_object_Variable_1;
    class USoundAttenuation* Temp_object_Variable_2;
    bool Temp_bool_IsClosed_Variable;
    int32 CallFunc_InternalBreakableDelay_ReturnValue;
    class USoundBase* Temp_object_Variable_3;
    int32 CallFunc_InternalBreakableDelay_ReturnValue_1;
    class USoundBase* Temp_object_Variable_4;
    class UPrimitiveComponent* K2Node_CustomEvent_HitComponent;
    class AActor* K2Node_CustomEvent_OtherActor;
    class UPrimitiveComponent* K2Node_CustomEvent_OtherComp;
    FVector K2Node_CustomEvent_NormalImpulse;
    FHitResult K2Node_CustomEvent_Hit;
    bool CallFunc_BreakHitResult_bBlockingHit_2;
    bool CallFunc_BreakHitResult_bInitialOverlap_2;
    float CallFunc_BreakHitResult_Time_2;
    float CallFunc_BreakHitResult_Distance_2;
    FVector CallFunc_BreakHitResult_Location_2;
    FVector CallFunc_BreakHitResult_ImpactPoint_2;
    FVector CallFunc_BreakHitResult_Normal_2;
    FVector CallFunc_BreakHitResult_ImpactNormal_2;
    class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat_2;
    class AActor* CallFunc_BreakHitResult_HitActor_2;
    class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent_2;
    FName CallFunc_BreakHitResult_HitBoneName_2;
    int32 CallFunc_BreakHitResult_HitItem_2;
    int32 CallFunc_BreakHitResult_ElementIndex_2;
    int32 CallFunc_BreakHitResult_FaceIndex_2;
    FVector CallFunc_BreakHitResult_TraceStart_2;
    FVector CallFunc_BreakHitResult_TraceEnd_2;
    class UPrimitiveComponent* K2Node_Event__otherComponent;
    FVector K2Node_Event__collisionNormal;
    float K2Node_Event__collisionDepth;
    float K2Node_Event_DeltaSeconds;
    bool K2Node_Event__isGameplayMeow;
    int32 Temp_int_Loop_Counter_Variable;
    class UABP_Cat_New_C* K2Node_DynamicCast_AsABP_Cat_New;
    bool K2Node_DynamicCast_bSuccess;
    class USoundBase* Temp_object_Variable_5;
    bool Temp_bool_Has_Been_Initd_Variable;
    class USoundBase* Temp_object_Variable_6;
    bool Temp_bool_Has_Been_Initd_Variable_1;
    class UJoyEasingInterpolator* Temp_wildcard_Variable;
    bool Temp_bool_IsClosed_Variable_1;
    class USoundBase* Temp_object_Variable_7;
    bool Temp_bool_Variable_8;
    FPostProcessSettings K2Node_MakeStruct_PostProcessSettings;
    float Temp_float_Variable;
    class USoundBase* Temp_object_Variable_8;
    E_sfx_miaou K2Node_CustomEvent_Sfx;
    bool CallFunc_IsMeowing_IsMeowing;
    class USoundBase* Temp_object_Variable_9;
    bool Temp_bool_Variable_9;
    class UJoyEasingInterpolator* Temp_wildcard_Variable_1;
    float Temp_float_Variable_1;
    bool Temp_bool_Has_Been_Initd_Variable_2;
    bool Temp_bool_Variable_10;
    float K2Node_CustomEvent_Ratio;
    float Temp_float_Variable_2;
    FBP_CatPawn_CK2Node_CreateDelegate_OutputDelegate_6 K2Node_CreateDelegate_OutputDelegate_6;
    void InterpolatorTickOutputPin(float bpp__Ratio__pf);
    class USoundBase* Temp_object_Variable_10;
    bool Temp_bool_IsClosed_Variable_2;
    class USoundBase* Temp_object_Variable_11;
    E_sfx_miaou Temp_byte_Variable;
    FVector K2Node_Event__worldInput;
    bool K2Node_CustomEvent_LookAt_On_Off;
    FVector K2Node_CustomEvent_LookAt_Location;
    bool Temp_bool_IsClosed_Variable_3;
    float Temp_float_Variable_3;
    bool Temp_bool_Has_Been_Initd_Variable_3;
    bool K2Node_Event__backpackOn;
    bool Temp_bool_Has_Been_Initd_Variable_4;
    FBP_CatPawn_CK2Node_CreateDelegate_OutputDelegate_7 K2Node_CreateDelegate_OutputDelegate_7;
    void InterpolatorCompleteOutputPin();
    class UJoyEasingInterpolator* CallFunc_StartEasingInterpolator__interpolatorObject;
    class UJoyEasingInterpolator* CallFunc_StartEasingInterpolator_ReturnValue;
    bool CallFunc_IsValid_ReturnValue_5;
    FLookAtData K2Node_MakeStruct_LookAtData;
    FLookAtData K2Node_MakeStruct_LookAtData_1;
    TEnumAsByte<EEndPlayReason::Type> K2Node_Event_EndPlayReason;
    FLookAtData K2Node_Select_Default;
    bool Temp_bool_IsClosed_Variable_4;
    float K2Node_CustomEvent_Ratio_1;
    int32 Temp_int_Array_Index_Variable;
    FLookAtData K2Node_MakeStruct_LookAtData_2;
    bool Temp_bool_Has_Been_Initd_Variable_5;
    FLookAtData K2Node_MakeStruct_LookAtData_3;
    bool Temp_bool_IsClosed_Variable_5;
    FTransform Temp_struct_Variable_6;
    float K2Node_CustomEvent_delta_time;
    E_sfx_miaou K2Node_CustomEvent_miaou_type;
    float K2Node_CustomEvent_maximum_duration;
    class USoundBase* Temp_object_Variable_12;
    float K2Node_CustomEvent_closestDanger;
    bool K2Node_CustomEvent_IsFeedbackOn;
    class UCatUsableComponent* K2Node_CustomEvent_Grabbable_1;
    class UCatUsableComponent* K2Node_CustomEvent_Grabbable;
    int32 Temp_int_Variable;
    class ACatPawn* K2Node_CustomEvent__catPawn_2;
    class AZurgPawn* K2Node_CustomEvent__zurg_1;
    class ACatPawn* K2Node_CustomEvent__catPawn_1;
    class AZurgPawn* K2Node_CustomEvent__zurg;
    FBP_CatPawn_CK2Node_CreateDelegate_OutputDelegate_8 K2Node_CreateDelegate_OutputDelegate_8;
    void InterpolatorTickOutputPin(float bpp__Ratio__pf);
    class USoundBase* Temp_object_Variable_13;
    class USoundBase* Temp_object_Variable_14;
    class USoundBase* Temp_object_Variable_15;
    class AAudioManager* CallFunc_GetAudioManager_AudioManager;
    bool Temp_bool_Has_Been_Initd_Variable_6;
    class USoundBase* Temp_object_Variable_16;
    class USoundBase* Temp_object_Variable_17;
    bool Temp_bool_IsClosed_Variable_6;
    int32 Temp_int_Variable_1;
    class USoundBase* Temp_object_Variable_18;
    TArray<class AActor*> CallFunc_GetMovementIgnoredActors_ReturnValue;
    class UJoyAsyncTraceSingleAction* CallFunc_AsyncSphereTraceSingleByChannel_ReturnValue;
    FBP_CatPawn_CK2Node_CreateDelegate_OutputDelegate_9 K2Node_CreateDelegate_OutputDelegate_9;
    void InterpolatorCompleteOutputPin();
    bool CallFunc_IsValid_ReturnValue_6;
    class UJoyAsyncTraceSingleAction* CallFunc_AsyncLineTraceSingleByChannel_ReturnValue;
    bool CallFunc_IsValid_ReturnValue_7;
    bool CallFunc_BreakHitResult_bBlockingHit_3;
    bool CallFunc_BreakHitResult_bInitialOverlap_3;
    float CallFunc_BreakHitResult_Time_3;
    float CallFunc_BreakHitResult_Distance_3;
    FVector CallFunc_BreakHitResult_Location_3;
    FVector CallFunc_BreakHitResult_ImpactPoint_3;
    FVector CallFunc_BreakHitResult_Normal_3;
    FVector CallFunc_BreakHitResult_ImpactNormal_3;
    class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat_3;
    class AActor* CallFunc_BreakHitResult_HitActor_3;
    class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent_3;
    FName CallFunc_BreakHitResult_HitBoneName_3;
    int32 CallFunc_BreakHitResult_HitItem_3;
    int32 CallFunc_BreakHitResult_ElementIndex_3;
    int32 CallFunc_BreakHitResult_FaceIndex_3;
    FVector CallFunc_BreakHitResult_TraceStart_3;
    FVector CallFunc_BreakHitResult_TraceEnd_3;
    float CallFunc_BreakRotator_Roll_1;
    float CallFunc_BreakRotator_Pitch_1;
    float CallFunc_BreakRotator_Yaw_1;
    bool K2Node_CustomEvent_IsGameplayMeow;
    class USoundBase* Temp_object_Variable_19;
    class USoundBase* Temp_object_Variable_20;
    TArray<class ACatPawn*> K2Node_CustomEvent_OtherCats;
    class USoundAttenuation* K2Node_Select_Default_1;
    class ACatPawn* CallFunc_Array_Get_Item;
    class USoundBase* Temp_object_Variable_21;
    class UJoyEasingInterpolator* CallFunc_StartEasingInterpolator__interpolatorObject_1;
    class UJoyEasingInterpolator* CallFunc_StartEasingInterpolator_ReturnValue_1;
    bool CallFunc_IsValid_ReturnValue_8;
    class AHKPlayerController* CallFunc_FindHKPlayerController_HKPlayerController;
    class AHKPlayerController* CallFunc_FindHKPlayerController_HKPlayerController_1;
    class AHKPlayerController* CallFunc_FindHKPlayerController_HKPlayerController_2;
    class ULifeComponent* K2Node_ComponentBoundEvent__lifeComponent_1;
    class AActor* K2Node_ComponentBoundEvent__killer;
    class USoundBase* Temp_object_Variable_22;
    class ULifeComponent* K2Node_ComponentBoundEvent__lifeComponent;
    bool Temp_bool_Has_Been_Initd_Variable_7;
    class USoundBase* K2Node_Select_Default_2;
    class USoundBase* K2Node_Select_Default_3;
    FBP_CatPawn_CK2Node_CreateDelegate_OutputDelegate_10 K2Node_CreateDelegate_OutputDelegate_10;
    void CatDelegate(class ACatPawn* bpp___catPawn__pf);
    class ACatPawn* K2Node_CustomEvent__catPawn;
    bool Temp_bool_IsClosed_Variable_7;
    FBP_CatPawn_CK2Node_CreateDelegate_OutputDelegate_11 K2Node_CreateDelegate_OutputDelegate_11;
    void ComponentHitSignature(class UPrimitiveComponent* bpp__HitComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, FVector bpp__NormalImpulse__pf, const FHitResult& bpp__Hit__pf);
    FJumpData CallFunc_GetCurrentJumpData_ReturnValue;
    class AHKPlayerController* CallFunc_FindHKPlayerController_HKPlayerController_3;
    TArray<class USoundWave*> K2Node_MakeArray_Array;
    class AHKPlayerController* CallFunc_FindHKPlayerController_HKPlayerController_4;
    class USoundWave* CallFunc_Array_Random_OutItem;
    int32 CallFunc_Array_Random_OutIndex;
    TArray<class AActor*> Temp_object_Variable_23;
    TArray<class AActor*> Temp_object_Variable_24;
    class UJoyAsyncTraceSingleAction* CallFunc_AsyncLineTraceSingleByChannel_ReturnValue_1;
    class UJoyAsyncTraceSingleAction* CallFunc_AsyncBoxTraceSingleByChannel_ReturnValue;
    bool CallFunc_IsValid_ReturnValue_11;
    bool CallFunc_IsValid_ReturnValue_12;
    TArray<class AActor*> Temp_object_Variable_25;
    class UJoyAsyncTraceSingleAction* CallFunc_AsyncLineTraceSingleByChannel_ReturnValue_2;
    TArray<class AActor*> Temp_object_Variable_26;
    class UJoyAsyncTraceSingleAction* CallFunc_AsyncLineTraceSingleByChannel_ReturnValue_3;
    bool CallFunc_IsValid_ReturnValue_13;
    bool CallFunc_IsValid_ReturnValue_14;
    class AHKPlayerController* CallFunc_FindHKPlayerController_HKPlayerController_5;
    class AHKPlayerController* CallFunc_FindHKPlayerController_HKPlayerController_6;

    void OnZurkExitGrabbed__DelegateSignature();
    void OnZurkEnterGrabbed__DelegateSignature();
    void OnObjectGrabbed__DelegateSignature(class ABP_CatPawn_C* bpp__Cat__pf, class UCatUsableComponent* bpp__Grabbable__pf);
    void OnObjectDropped__DelegateSignature(class ABP_CatPawn_C* bpp__Cat__pf, class UCatUsableComponent* bpp__Grabbable__pf);
    void ZurgDetached_Event_0(class ACatPawn* bpp___catPawn__pf, class AZurgPawn* bpp___zurg__pf);
    void ZurgAttached_Event_0(class ACatPawn* bpp___catPawn__pf, class AZurgPawn* bpp___zurg__pf);
    void Update On Hit Feedback();
    void Update Crawl();
    void Update Capture for Eyes();
    void Update Available Jumps LookAt();
    void UpdateRandomLookAt();
    void UpdateBackpackUsableLookAt();
    void UnregisterOtherCats();
    void TraceDone_D2459D3C442A98B4AEEE59BA63EF6AA0(bool bpp__HasHit__pf, FHitResult bpp__Hit__pf);
    void TraceDone_D04BA825482040E16BB1AFB76F85D1D0(bool bpp__HasHit__pf, FHitResult bpp__Hit__pf);
    void TraceDone_B3CB66934238B75CE15E8588E954AED5(bool bpp__HasHit__pf, FHitResult bpp__Hit__pf);
    void TraceDone_8EBCEA084657FA49C26CE89432637699(bool bpp__HasHit__pf, FHitResult bpp__Hit__pf);
    void TraceDone_4AB22679471F1338D1045F9A6149D216(bool bpp__HasHit__pf, FHitResult bpp__Hit__pf);
    void TraceDone_2222196049B2523003211D9D778F740D(bool bpp__HasHit__pf, FHitResult bpp__Hit__pf);
    void Tick 4();
    void TickDriftSound();
    void Tick_6246EF4646E19036986D72BAF334FC47(float bpp__Ratio__pf);
    void Tick_6246EF4646E19036986D72BAD35F862B(float bpp__Ratio__pf);
    void Tick1();
    void Simple Pilot();
    void ShouldDoB12CallLookAt(bool& bpp__Value__pf);
    void SetBackpackFur(bool bpp___backpackOn__pf);
    void requestMiaouType(E_sfx_miaou bpp__miaouxtype__pfT, float bpp__maximumxduration__pfT);
    void RequestMeow(E_sfx_miaou bpp__sfx__pf);
    void Release Grabbed Actor();
    void RegisterOtherCats(const TArray<class ACatPawn*>& bpp__OtherCats__pf__const);
    void ReceiveTick(float bpp__DeltaSeconds__pf);
    void ReceiveEndPlay(TEnumAsByte<EEndPlayReason::Type> bpp__EndPlayReason__pf);
    void ReceiveBeginPlay();
    void Pilot(FVector bpp__Input__pf, float bpp__dt__pf, FVector& bpp__CorrectedInputColl__pf);
    void OnStruggled();
    void OnResetInput(FVector bpp___worldInput__pf);
    void OnMeowSoundCompletion();
    void OnMeowed(bool bpp___isGameplayMeow__pf);
    void OnJumpEnded(class ACatPawn* bpp___catPawn__pf);
    void OnExitGrabbed();
    void OnEnterGrabbed();
    void OnBodyComponentHit(class UPrimitiveComponent* bpp__HitComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, FVector bpp__NormalImpulse__pf, const FHitResult& bpp__Hit__pf__const);
    void OnBodyCollision(class UPrimitiveComponent* bpp___otherComponent__pf, FVector bpp___collisionNormal__pf, float bpp___collisionDepth__pf);
    void NotifyObjectGrabbed(class UCatUsableComponent* bpp__Grabbable__pf);
    void NotifyObjectDropped(class UCatUsableComponent* bpp__Grabbable__pf);
    void Miaou Tick(float bpp__deltaxtime__pfT);
    void MeowAudioFinished();
    void JumpBeginEndLocation();
    bool IsRailIgnoredObstacle(const class AActor* bpp___actor__pf__const);
    void IsMeowing(bool& bpp__IsMeowing__pf);
    void IsInCinematic(bool bpp__InCinematic__pf);
    void IsCrawling(bool& bpp__IsCrawling__pf);
    void InternalOnMeowed(bool bpp__IsGameplayMeow__pf);
    void informClosestZurgSwarm(float bpp__closestDanger__pf, bool bpp__IsFeedbackOn__pf);
    FVector GetLookAtOffset();
    void GetGrabbedComponent(class UCatUsableComponent*& bpp__Grabbable__pf);
    void GetGrabbedActor(class AActor*& bpp__GrabbedActor__pf);
    void GetBestJump(TArray<FJumpData>& bpp__JumpxData__pfT, FJumpData& bpp__BestJump__pf, float& bpp__Score__pf);
    void FeedCatMaterialCollection();
    void ExecuteUbergraph_BP_CatPawn_8(int32 bpp__EntryPoint__pf);
    void ExecuteUbergraph_BP_CatPawn_7(int32 bpp__EntryPoint__pf);
    void ExecuteUbergraph_BP_CatPawn_6(int32 bpp__EntryPoint__pf);
    void ExecuteUbergraph_BP_CatPawn_35(int32 bpp__EntryPoint__pf);
    void ExecuteUbergraph_BP_CatPawn_11(int32 bpp__EntryPoint__pf);
    void Custom LookAt(bool bpp__LookAtxOnxOff__pfTE, FVector bpp__LookAtxLocation__pfT);
    void Complete_6246EF4646E19036986D72BAF334FC47();
    void Complete_6246EF4646E19036986D72BAD35F862B();
    void CinematicVelocity();
    bool CheckJumpValidity(const FJumpData& bpp___jumpTargets__pf__const, FString& bpp___failReason__pf);
    void BndEvt__BP_CatPawn_m_lifeComponent_K2Node_ComponentBoundEvent_2_LifeComponentRevivedDelegate__DelegateSignature(class ULifeComponent* bpp___lifeComponent__pf);
    void BndEvt__BP_CatPawn_m_lifeComponent_K2Node_ComponentBoundEvent_0_LifeComponentKilledDelegate__DelegateSignature(class ULifeComponent* bpp___lifeComponent__pf, class AActor* bpp___killer__pf);
    void JoyAsyncTraceSingleDone__DelegateSignature(bool bpp__HasHit__pf, FHitResult bpp__Hit__pf);
    void InterpolatorTickOutputPin__DelegateSignature(float bpp__Ratio__pf);
    void InterpolatorCompleteOutputPin__DelegateSignature();
    void ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* bpp__HitComponent__pf, class AActor* bpp__OtherActor__pf, class UPrimitiveComponent* bpp__OtherComp__pf, FVector bpp__NormalImpulse__pf, const FHitResult& bpp__Hit__pf);
    void CatDelegate__DelegateSignature(class ACatPawn* bpp___catPawn__pf);
};

#endif
